name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest
    name: PHP 8.4 Tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: json, dom, curl, libxml, mbstring, zip, pdo, pdo_mysql
          tools: composer:v2
          coverage: xdebug

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-8.4-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            php-8.4-composer-
            php-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress --ansi --prefer-dist

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Setup Problem Matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate --ansi
          php artisan config:cache
          php artisan route:cache

      - name: Run Tests
        run: ./vendor/bin/pest --colors=always --parallel --coverage-clover coverage.xml

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: json, dom, curl, libxml, mbstring, zip
          tools: composer:v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-8.4-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            php-8.4-composer-
            php-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress --ansi --prefer-dist

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run PHP Linting
        run: composer test:lint

      - name: Run PHP Static Analysis
        run: composer test:types

      - name: Run Rector (Dry Run)
        run: composer test:rector

      - name: Run JavaScript/TypeScript Linting
        run: npm run lint
